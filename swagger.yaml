swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

# Pahse2
  /user/accounts:
    post:
      security:
        - Bearer: []
      tags:
        - Account Module (not implemented)
      summary: User Accounts API
      description: |
          API for fetching a user accounts

          Filter all accounts where <code>`the user id`</code> is present in the <code>`userId`</code> table.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Filter accounts based on userId
          required: true
          schema:
            type: object
            properties:
              userId:
                type: string
                description: The userId to filter accounts by
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/UserAccountsResponse'
          examples:
            application/json:
              status: 200
              message: "Success fetching user accounts"
              body:
                userId: "67c7352eb891884d709ab384"
                account:
                  - id: "objectId0001"
                    accountNumber: "x8349"
                    title: "Argent Bank Checking"
                    amount: 2082.79
                    description: "Available Balance"
                  - id: "objectId0002"
                    accountNumber: "x6712"
                    title: "Argent Bank Savings"
                    amount: 10928.42
                    description: "Available Balance"
                  - id: "objectId0003"
                    accountNumber: "x8349"
                    title: "Argent Bank Credit Card"
                    amount: 184.30
                    description: "Current Balance"
        '400':
          description: Invalid Fields
        '404':
          description: Accounts not found
        '500':
          description: Internal Server Error
  /user/account:
    post:
      security:
        - Bearer: []
      tags:
        - Account Module (not implemented)
      summary: User Account API
      description: |
          API for fetching a user account

          Check where <code>`the user id`</code> is present in the <code>`userId`</code> table.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Account based on userId
          required: true
          schema:
            type: object
            properties:
              userId:
                type: string
                description: The user ID to control account ownership
              accountId:
                type: string
                description: The account ID to fetch account
      produces:
        - application/json
      responses:
        '200':
          description: User account retrieved successully
          schema:
            $ref: '#/definitions/UserAccountResponse'
          examples:
            application/json:
              status: 200
              message: "Success fetching user account"
              body:
                userId: "67c7352eb891884d709ab384"
                account:
                    id: "objectId0001"
                    accountNumber: "x8349"
                    title: "Argent Bank Checking"
                    amount: 2082.79
                    description: "Available Balance"
        '400':
          description: Invalid Fields
        '404':
          description: Accounts not found
        '500':
          description: Internal Server Error
  /user/account/transactions/31daysSinceMostRecentTransaction:
    post:
      security:
        - Bearer: []
      tags:
        - Account Module (not implemented)
      summary: Last 31 Days Transactions from most recent Transaction API
      description: |
        API for fetching account transactions for the 31 days following the most recent transaction.

        <b>The server should retrieve the most recent transaction</b> and then filter out transactions that are within <b>31 days of that last transaction</b>. 
        <i>This allows the client to retrieve a relevant set of data based on the most recent activity.</i>
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Account ID to fetch transactions
          required: true
          schema:
            type: object
            properties:
              userId:
                type: string
                description: The user ID to control account ownership
              accountId:
                type: string
                description: The account ID to fetch transactions for
      produces:
        - application/json
      responses:
        '200':
          description: Account transactions for the 31 days following the most recent transaction retrieved successfully
          schema:
            $ref: '#/definitions/UserAccountTransactionsResponse'
          examples:
            application/json:
              status: 200
              message: "Success fetching account transactions for the 31 days following the most recent transaction"
              body:
                userId: "67c7352eb891884d709ab384"
                accountId: "objectId0001"
                transactions:
                - id: "objectId0020"
                  date: "2020-06-20T14:30:00Z"
                  description: "Golden Sun Bakery"
                  amount: 5
                  balance: 2082.79
                  transactionType: "Electronic"
                  category: "Food"
                  notes: ""
                  userIdOfNote: "67c7352eb891884d709ab384"

                - id: "objectId0021"
                  date: "2020-06-20T14:00:00Z"
                  description: "Golden Sun Bakery"
                  amount: 10
                  balance: 2087.79
                  transactionType: "Electronic"
                  category: "Food"
                  notes: ""
                  userIdOfNote: "67c7352eb891884d709ab384"

                - id: "objectId0022"
                  date: "2020-06-20T13:30:00Z"
                  description: "Golden Sun Bakery"
                  amount: 20
                  balance: 2097.79
                  transactionType: "Electronic"
                  category: "Food"
                  notes: ""
                  userIdOfNote: "67c7352eb891884d709ab384"

                - id: "objectId0023"
                  date: "2020-06-20T13:00:00Z"
                  description: "Golden Sun Bakery"
                  amount: 30
                  balance: 2117.79
                  transactionType: "Electronic"
                  category: "Food"
                  notes: ""
                  userIdOfNote: "67c7352eb891884d709ab384"

                - id: "objectId0024"
                  date: "2020-06-20T12:30:00Z"
                  description: "Golden Sun Bakery"
                  amount: 40
                  balance: 2147.79
                  transactionType: "Electronic"
                  category: "Food"
                  notes: ""
                  userIdOfNote: "67c7352eb891884d709ab384"

                - id: "objectId0025"
                  date: "2020-06-20T12:00:00Z"
                  description: "Golden Sun Bakery"
                  amount: 50
                  balance: 2187.79
                  transactionType: "Electronic"
                  category: "Food"
                  notes: ""
                  userIdOfNote: "67c7352eb891884d709ab384"
        '400':
          description: Invalid Fields
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /transaction:
    patch:
      security:
        - Bearer: []
      tags:
        - Account Module (not implemented)
      summary: Notes Account Transaction API
      description: |
        API for updating notes account transaction.

        Find transaction by id when update category, notes and userIdOfNote (userId that updated transaction)
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Transaction ID to update transaction note
          required: true
          schema:
            type: object
            properties:
              transactiontId:
                type: string
                description: The transaction ID to update transaction
              category:
                type: string
                description: new text to update transaction
              notes:
                type: string
                description: new text to update transaction
              userIdOfNote:
                type: string
                description: userId that updated transaction (id of connected user)
      produces:
        - application/json
      responses:
        '200':
          description: Notes Transaction updated successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
          examples:
            application/json:
              status: 200
              message: "Success updating notes transaction"
              body:
                transaction:
                  id: "objectId0020"
                  date: "2020-06-20T14:30:00Z"
                  description: "Golden Sun Bakery"
                  amount: 5
                  balance: 2082.79
                  transactionType: "Electronic"
                  category: "new text"
                  notes: "new text"
                  userIdOfNote: "67c7352eb891884d709ab384"
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header


definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string


  # Phase2
  Account:
    type: object
    properties:
      id: 
        type: string
      accountNumber:
        type: string
      title: 
        type: string
      amount: 
        type: number
        format: float
      description: 
        type: string
      usersId:
        type: array
        items:
          type: string
  # UserAccounts:
  #     type: object
  #     properties:
  #       userId:
  #         type: string
  #       accounts:
  #         type: array
  #         items:
  #           $ref: "#/definitions/Account"
  Transaction:
    type: object
    properties:
      id: 
        type: string
      date:
        type: date-time
      description: 
        type: string
      amount: 
        type: number
        format: float
      balance: 
        type: number
        format: float
      transactionType:
        type: string
      category:
        type: string
      notes:
        type: string
      accountId:
        type: string
      userIdOfNote:
        type: string
  # UserAccountTransactions:
  #     type: object
  #     properties:
  #       userId:
  #         type: string
  #       accountId:
  #         type: string
  #       transactions:
  #         type: array
  #         items:
  #           $ref: "#/definitions/Transaction"
  UserAccountsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          userId:
            type: string
          accounts:
            type: array
            items:
              $ref: "#/definitions/Account"
  UserAccountResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          userId:
            type: string
          account:
            $ref: "#/definitions/Account"
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
         $ref: "#/definitions/Transaction"
  UserAccountTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          userId:
            type: string
          accountId:
            type: string
          transactions:
            type: array
            items:
              $ref: "#/definitions/Transaction"